Procesy język C:

1. #include <unisted.h>
#include <stdio.h>

int main(){ 

printf("Pid: %d\t ppid: %d/n" , getpid(), getpidd() ); Przedstawienie numeru PID oraz PPID
return 0;
}

2.#include <unisted.h>
#include <stdio.h>

int main() {
int x; 
printf("Pid: %d\t ppid: %d\n", getpid(), getpidd() );
scanf("%d", &x);  z czytanie tekstu wpisanego przez użytkownika, nadanie typu zmiennej i nazwa zmiennej.
return 0;

}

4.#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
pid_t pid = fork();
printf("PID: %d\t PPID: %d\n", getpid(), getpidd() );
if (pid > 0 ) {
wait(NULL);
printf("Koniec czekania \n");
}
return 0;
}

5.#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

int main (int argc, char  **argv)
{
int liczba = atoi(argv[1]);
pid_t pid = fork();
printf("PID: %d\t PPID: %d\n", getpid(), getpidd() );
if (pid > 0 ) 
{
int suma = 0;
for(int i = 0; i<= liczby; i++)
{
suma = suma + i;
}
wait(NULL);
printf("Suma %d\n", suma);
}
else 
{
for(int i = 1; i <= liczby; i = i + 2);
printf("Nieparzysta %d\n ", i);
}
return 0;
}

6.
#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

int main (int argc, char **argv)
{
int i;
for(i = 0; i < 10; i++)
{
if(fork() ==  0 )
{
printf("PID: %d\t PPID: %d\n", getpid(), getpidd() );
}else{
wait(NULL);
printf("%d Rodzic juz nie czeka\t pid: %d\n", i, getpid() );
break;
}

}
return 0;
}

7.
#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>

int main(int argc, char **argv)
{
int i;
pid_t masterPID = getpid();
for(i = 0; i < 10; i++)
{
if (masterPID == getpid() ) {
pid_t = fork();
if(pid() == 0)
}
 {
printf("PID: %d\t PPID: %d\n", getpid(), getpidd() );
}else{
wait(NULL);
printf("%d Rodzic juz nie czeka\t pid: %d\n", i, getpid() );
break;
}

}
return 0;
}
