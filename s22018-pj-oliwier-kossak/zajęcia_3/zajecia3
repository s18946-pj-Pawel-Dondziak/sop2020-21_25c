
Zajęcia 3 Skrypty

Ćwiczenia 1

Skrypt 1: Sprawdza czy podane wiecej niz jeden parametr


#!/bin/bash

   wyraz=$#
        if [ ${wyraz} -gt 1 ] ; then
                echo  "$1";

        else
                echo "Brak parametor";
        fi

Skrypt 2: Sprawdz czy istnieje plik config.cfg

#!/bin/bash


        if [ -f config.cfg] ; then
               ./config.cfg

        elif [ $# -gt 0 ] ; then
                ./$1;
        else
                echo "bład"
        fi

Skrypt 3: Sprawdza czy skrypt kończy się na .sh jeśli nie doipsuje .sh

#!/bin/bash

 nazwa=$(basename $0)

        if [ ${nazwa: -3} != ".sh" ] ;then
                mv ${nazwa} ${nazwa}.sh
        else
zajęcia_3                echo "SKrypt posiada .sh"
        fi
Skrypt 4: Sprawdza czy w katalogu jest więcej niż 5 plików

#!/bin/bash

        pliki=$(ls -l |grep -e ^- | wc -l)

        if [ ${pliki} -gt 5 ] ; then
            echo "jest wiecej niz 5 plików"
        else
         echo "jest mneij niz 5 plikow"
        fi

Ćwiczenia 2

 Skrypt 1: Wypisuj lcizby od 10 do 1 co 2 liczby

#!/bin/bash

  for i in {10..1..2}; do
        echo "$i"
  done

 Skrypt 2: Wypisuje wysztkie argumenty wywołania skryptu

#!/bin/bash

 tablica=($@)

        for i in  "${tablica[@]}"; do echo $i ; done

 Skrypt 3: Poprzedza nazwę plików "Patrzcie państwo oto plik"

  #!/bin/bash

  nazwa=$(ls -p | grep -v /)
  for i in ${nazwa}
  do
          echo "Patrzcie państwo oto plik '$i'"
  done

 Skrypt 4: Zmienia roszerzenie pliku

  #!/bin/bash

 plik=$(ls -p | grep -v /)

  if [ !${plik: -2}  = ".c" ] ; then
          mv -- ${plik} ${plik}.c
   else
        mv  -- ${plik} ${plik: -2}
   fi

 Skrypt 5: Pobiera od użytkownika plik i wpisuje zawartość najpierw po kolei potem w odwrotenj kolejności
 #!/bin/bash

 index=0

        while read line; do
                array[$index]="$line"
                index=$(($index+1))
        done
         cat ${array[@]}
         for((i=${array[$#]}; i>=0 ;i--));do
                 cat ${array[$(($i))]}
          done



Ćwiczenia 3

 Skrypt 1: funkcja wypisuje tekst na podany kolor

#!/bin/bash

function funkcja(){

    local  tekst=$1
     local  kolory=$2

       echo -e " \e[${kolory}m ${tekst} "
}
  funkcja  $1 $2

Skrypt 2: Ciąg fibonacciego
 #!/bin/bash

fibonaci(){

  local liczba=$1
  local x=0
  local y=1
  local z


  if [ ${liczba} -le 1 ] ; then
        echo  "${liczba} "
  else
          for((i=1; i <=${liczba} ; i++))
                do
                z=$((x+y))

                x=y
        y=z
                done
                        echo " ${z}"

  fi
}
fibonaci $1


Zadanie domowe

 Skrypt 1: Poprawne polskie imie 

  #!/bin/bash
   imie=$1

   if [[ ${imie:0:1} =~ [A-Ż] ]] && [[ ${imie:1} =~ [a-ż] ]] && [[ !${zmienna} = [:punct:] ]] ; then
         echo " poprawne imie"

  else
        echo "nie Poprawne imie"

  fi

 Skrypt 2 Kod pocztowy

  #!/bin/bash
   kod=$1

   if [[ ${kod} =~ [0-9]{2}-[0-9]{3}$ ]] ; then
         echo " TO Jest kod pocztowy "

  else
        echo "To nie jest kod pocztowy"

  fi

 Skrypt 3 Sprawdzenie maila

 #!/bin/bash
   mail=$1

   if [[ ${mail: -10} =~ "@gmail.com" ]] || [[ ${mail: -6} =~ "@wp.pl" ]]  ; then
         echo " TO jest email "

  else
        echo "To nie jest email"

  fi

Skrypt 4  Sprawdza czy zmienna to kod pocztowy e-mail lub imie

  #!/bin/bash
   zmienna=$1

   if [[ ${zmienna:0:1} =~ [A-Ż] ]] && [[ ${zmienna:1} =~ [a-ż] ]] && [[ !${zmienna} = [:punct:] ]] ; then
         echo " To jest imie "

   elif [[ ${zmienna} =~ [0-9]{2}-[0-9]{3}$ ]] ; then
         echo " TO Jest kod pocztowy"

   elif [[ ${zmienna: -10} =~ "@gmail.com" ]] || [[ ${zmienna: -6} =~ "@wp.pl" ]]  ; then
         echo " TO jest email "

  else
        echo "Żadne z powyższych "

  fi


